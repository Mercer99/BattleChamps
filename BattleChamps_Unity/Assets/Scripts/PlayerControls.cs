//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""InGameActions"",
            ""id"": ""e1749693-0349-4d5c-83f5-ff0cbf888255"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6905b973-5b76-4911-8282-ea417ed37922"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aiming"",
                    ""type"": ""Value"",
                    ""id"": ""321d2208-1bbb-43aa-9114-2cdff6917fa1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""48dd6f4e-d8eb-4288-82a9-ffa1c06c18ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BasicAttack"",
                    ""type"": ""Button"",
                    ""id"": ""dedf904b-f007-43d9-a12e-de691726d4f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shield/Parry"",
                    ""type"": ""Button"",
                    ""id"": ""cb217b9b-1944-43fc-a5e3-7b49bb8c59ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability1"",
                    ""type"": ""Button"",
                    ""id"": ""6f3b8601-96b5-4b62-843d-8932f0ea37b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability2"",
                    ""type"": ""Button"",
                    ""id"": ""692c7f77-a168-4fac-8064-63997f542131"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""203e2db7-ae74-4a27-b657-0a284fce87a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""812dd73c-2263-41c2-bed1-d27d6e1c052f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""426cdfdf-5cf7-4c8c-9d42-d7f500fe1444"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""bfbeb537-29fc-4122-8b08-85441bd5e825"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""597b57e5-25ae-48c7-b88e-4bda10ab52c8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f4cd4dc1-d255-47fa-99dc-4f9d8ad0dfa6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""89c5325b-0dde-4d3d-8f21-d208fd448fc8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bb354966-561c-445a-969b-38b48e9f9ded"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""916c8bee-dffb-441f-83b2-9f5e517b3515"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5917dcd3-8ab1-47d6-b14c-6cf8647ca84a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd42de41-99a5-4378-bd0d-b4145b27027f"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad6fd28a-e214-4474-9db0-2c30a7a17e77"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Shield/Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5c107c4-dd49-4bac-80bc-b380b141f05a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Shield/Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41b94cee-4c5c-4d29-95d6-6a1705d903fb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fd2cd58-c5f9-4a5a-b0cc-0147b88c9c8f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b5b20e7-7c6b-4203-a03c-66ced44edf6d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3c26213-c3f5-4f2f-b878-4a5363c5b336"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e367e7c-2de9-43f0-ad84-1bc69ad2fed6"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bbf0e04-067e-44a4-94f9-1441f848677c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuActions"",
            ""id"": ""fb3409e8-2fc5-4b1b-858c-f1f72503a7db"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7cbaddff-57cc-4902-9df4-c0ab4393f067"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""5cd3cab7-adb3-48f8-9948-322e17a90a94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""e2f77e37-dd79-4714-8c31-ee598b13e35e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0e51c559-ded4-4ddd-9ec5-d20426ec66a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e7824d64-3f65-4212-acd6-e60c1357be57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bf3ae8b5-86bb-4dae-8218-cb35a6993fa2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""69a379f9-2969-43b0-9473-fd96e3584d46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""43cbf066-94a7-48cd-9386-817e1d761e65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""67bdb843-064e-464e-85f7-986c9ab5be29"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5be50d62-669d-4110-8fd1-b26cf31fc011"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeMenu"",
                    ""type"": ""Button"",
                    ""id"": ""dfd47ef8-57a9-4e96-8851-def664aaf237"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShuffleLeft"",
                    ""type"": ""Button"",
                    ""id"": ""3ebeaf6f-fceb-413e-a380-a7b74bbf4570"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShuffleRight"",
                    ""type"": ""Button"",
                    ""id"": ""1c6aa81a-3e5b-4988-b948-f67bbd03665b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""0f545619-51c7-4836-8803-725ca255594a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7c1609d3-c5f1-4bac-84b9-6300bade1fa8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c64ec26-cdaa-4ae4-979f-5dc8074e42a7"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4fb30a63-68a6-4b0b-9314-efbd4aedc578"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1709b066-00a7-404e-8de3-11ca626eca44"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""17b92693-e0b0-477f-844d-c3d2c4a1eda6"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e7db272a-4e42-4eb2-b4a6-c34052fd0299"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""63584f6f-8875-4abb-ba23-409a135f0078"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c2939cc0-4bb9-4cd3-a6ab-bf6b9a17883a"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40431ff7-3947-4108-abca-c5c54b9fb91a"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""7305b268-e631-43fb-a6a5-c40575522fcd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""20cb7fad-1fd4-4ee6-97dc-fb73e9265eb5"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2712d389-8b8b-4fdf-82e5-b7f51dc4614e"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e257b38-2e5c-48ac-89f7-80c84c13b643"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3a1484f5-99f2-4d1a-aa96-98cc6b531733"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""d01c6b87-a1a7-445c-a27f-6aca650ce2f5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ebaf38d7-61c6-41a9-aa71-a72894b9b1ea"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""46cc545e-4ce8-497a-9ffe-5d5f378efa71"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bf7f8f42-29ce-4ef1-9f70-e3a918e20f34"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cc6bfe4a-f499-46a1-b760-7ddcc9665256"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""75ffb889-a75d-47ab-af3d-8c54cac7f25f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""895b0f45-6f5d-4896-8e05-8eb221e24e39"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eafc7393-4af7-45e4-a8f4-5500231ea0cd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""26e8e0a9-890e-49e0-98d2-6af9673efa9e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3aaee8d6-4976-4b5c-acbe-bad5a5ed7289"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b30016f-6094-49d0-a32b-c9f8ecc83d85"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b91972e4-90ae-4ba4-b83b-63a1b88837ef"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5171cb58-6539-45bf-bfcf-5c26225d4b7d"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9476fd2f-c7c3-4a91-a3f3-b295657b7a53"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32e6d504-ade8-4773-86a2-85c1c7d4fc3b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a97d579-4b00-461c-87ee-4fa808dce12e"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fdfe336-8c1c-4197-8892-e175258b1f42"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb907a5c-bfba-4c33-aa86-217a0b07c4e4"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b4aeb87-2959-4e81-8e93-96284bbd84c6"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9537ace-b5fa-4d3f-b01a-54d04bdf3da9"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81159e30-df19-469c-b0fc-4dc0bd854c3a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6edc9054-3081-40ad-8b88-d1ffadd9d685"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""694bbe88-238b-4f16-9191-389db3ffd0bb"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaede190-9b4e-4bc7-b870-4e9974828110"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""ChangeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1791fc4-e46e-484c-a003-260527ae2b61"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""ShuffleLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f91b843a-af82-4a41-8178-bc05ee086c6b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""ShuffleRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InGameActions
        m_InGameActions = asset.FindActionMap("InGameActions", throwIfNotFound: true);
        m_InGameActions_Movement = m_InGameActions.FindAction("Movement", throwIfNotFound: true);
        m_InGameActions_Aiming = m_InGameActions.FindAction("Aiming", throwIfNotFound: true);
        m_InGameActions_Dash = m_InGameActions.FindAction("Dash", throwIfNotFound: true);
        m_InGameActions_BasicAttack = m_InGameActions.FindAction("BasicAttack", throwIfNotFound: true);
        m_InGameActions_ShieldParry = m_InGameActions.FindAction("Shield/Parry", throwIfNotFound: true);
        m_InGameActions_Ability1 = m_InGameActions.FindAction("Ability1", throwIfNotFound: true);
        m_InGameActions_Ability2 = m_InGameActions.FindAction("Ability2", throwIfNotFound: true);
        m_InGameActions_Pause = m_InGameActions.FindAction("Pause", throwIfNotFound: true);
        // MenuActions
        m_MenuActions = asset.FindActionMap("MenuActions", throwIfNotFound: true);
        m_MenuActions_Navigate = m_MenuActions.FindAction("Navigate", throwIfNotFound: true);
        m_MenuActions_Submit = m_MenuActions.FindAction("Submit", throwIfNotFound: true);
        m_MenuActions_Cancel = m_MenuActions.FindAction("Cancel", throwIfNotFound: true);
        m_MenuActions_Point = m_MenuActions.FindAction("Point", throwIfNotFound: true);
        m_MenuActions_Click = m_MenuActions.FindAction("Click", throwIfNotFound: true);
        m_MenuActions_ScrollWheel = m_MenuActions.FindAction("ScrollWheel", throwIfNotFound: true);
        m_MenuActions_MiddleClick = m_MenuActions.FindAction("MiddleClick", throwIfNotFound: true);
        m_MenuActions_RightClick = m_MenuActions.FindAction("RightClick", throwIfNotFound: true);
        m_MenuActions_TrackedDevicePosition = m_MenuActions.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_MenuActions_TrackedDeviceOrientation = m_MenuActions.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_MenuActions_ChangeMenu = m_MenuActions.FindAction("ChangeMenu", throwIfNotFound: true);
        m_MenuActions_ShuffleLeft = m_MenuActions.FindAction("ShuffleLeft", throwIfNotFound: true);
        m_MenuActions_ShuffleRight = m_MenuActions.FindAction("ShuffleRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGameActions
    private readonly InputActionMap m_InGameActions;
    private IInGameActionsActions m_InGameActionsActionsCallbackInterface;
    private readonly InputAction m_InGameActions_Movement;
    private readonly InputAction m_InGameActions_Aiming;
    private readonly InputAction m_InGameActions_Dash;
    private readonly InputAction m_InGameActions_BasicAttack;
    private readonly InputAction m_InGameActions_ShieldParry;
    private readonly InputAction m_InGameActions_Ability1;
    private readonly InputAction m_InGameActions_Ability2;
    private readonly InputAction m_InGameActions_Pause;
    public struct InGameActionsActions
    {
        private @PlayerControls m_Wrapper;
        public InGameActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InGameActions_Movement;
        public InputAction @Aiming => m_Wrapper.m_InGameActions_Aiming;
        public InputAction @Dash => m_Wrapper.m_InGameActions_Dash;
        public InputAction @BasicAttack => m_Wrapper.m_InGameActions_BasicAttack;
        public InputAction @ShieldParry => m_Wrapper.m_InGameActions_ShieldParry;
        public InputAction @Ability1 => m_Wrapper.m_InGameActions_Ability1;
        public InputAction @Ability2 => m_Wrapper.m_InGameActions_Ability2;
        public InputAction @Pause => m_Wrapper.m_InGameActions_Pause;
        public InputActionMap Get() { return m_Wrapper.m_InGameActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActionsActions set) { return set.Get(); }
        public void SetCallbacks(IInGameActionsActions instance)
        {
            if (m_Wrapper.m_InGameActionsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnMovement;
                @Aiming.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAiming;
                @Aiming.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAiming;
                @Aiming.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAiming;
                @Dash.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnDash;
                @BasicAttack.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnBasicAttack;
                @BasicAttack.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnBasicAttack;
                @BasicAttack.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnBasicAttack;
                @ShieldParry.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnShieldParry;
                @ShieldParry.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnShieldParry;
                @ShieldParry.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnShieldParry;
                @Ability1.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility1;
                @Ability1.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility1;
                @Ability1.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility1;
                @Ability2.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility2;
                @Ability2.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility2;
                @Ability2.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnAbility2;
                @Pause.started -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_InGameActionsActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_InGameActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Aiming.started += instance.OnAiming;
                @Aiming.performed += instance.OnAiming;
                @Aiming.canceled += instance.OnAiming;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @BasicAttack.started += instance.OnBasicAttack;
                @BasicAttack.performed += instance.OnBasicAttack;
                @BasicAttack.canceled += instance.OnBasicAttack;
                @ShieldParry.started += instance.OnShieldParry;
                @ShieldParry.performed += instance.OnShieldParry;
                @ShieldParry.canceled += instance.OnShieldParry;
                @Ability1.started += instance.OnAbility1;
                @Ability1.performed += instance.OnAbility1;
                @Ability1.canceled += instance.OnAbility1;
                @Ability2.started += instance.OnAbility2;
                @Ability2.performed += instance.OnAbility2;
                @Ability2.canceled += instance.OnAbility2;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public InGameActionsActions @InGameActions => new InGameActionsActions(this);

    // MenuActions
    private readonly InputActionMap m_MenuActions;
    private IMenuActionsActions m_MenuActionsActionsCallbackInterface;
    private readonly InputAction m_MenuActions_Navigate;
    private readonly InputAction m_MenuActions_Submit;
    private readonly InputAction m_MenuActions_Cancel;
    private readonly InputAction m_MenuActions_Point;
    private readonly InputAction m_MenuActions_Click;
    private readonly InputAction m_MenuActions_ScrollWheel;
    private readonly InputAction m_MenuActions_MiddleClick;
    private readonly InputAction m_MenuActions_RightClick;
    private readonly InputAction m_MenuActions_TrackedDevicePosition;
    private readonly InputAction m_MenuActions_TrackedDeviceOrientation;
    private readonly InputAction m_MenuActions_ChangeMenu;
    private readonly InputAction m_MenuActions_ShuffleLeft;
    private readonly InputAction m_MenuActions_ShuffleRight;
    public struct MenuActionsActions
    {
        private @PlayerControls m_Wrapper;
        public MenuActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_MenuActions_Navigate;
        public InputAction @Submit => m_Wrapper.m_MenuActions_Submit;
        public InputAction @Cancel => m_Wrapper.m_MenuActions_Cancel;
        public InputAction @Point => m_Wrapper.m_MenuActions_Point;
        public InputAction @Click => m_Wrapper.m_MenuActions_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_MenuActions_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_MenuActions_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_MenuActions_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_MenuActions_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_MenuActions_TrackedDeviceOrientation;
        public InputAction @ChangeMenu => m_Wrapper.m_MenuActions_ChangeMenu;
        public InputAction @ShuffleLeft => m_Wrapper.m_MenuActions_ShuffleLeft;
        public InputAction @ShuffleRight => m_Wrapper.m_MenuActions_ShuffleRight;
        public InputActionMap Get() { return m_Wrapper.m_MenuActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActionsActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActionsActions instance)
        {
            if (m_Wrapper.m_MenuActionsActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @ChangeMenu.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnChangeMenu;
                @ChangeMenu.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnChangeMenu;
                @ChangeMenu.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnChangeMenu;
                @ShuffleLeft.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleLeft;
                @ShuffleLeft.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleLeft;
                @ShuffleLeft.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleLeft;
                @ShuffleRight.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleRight;
                @ShuffleRight.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleRight;
                @ShuffleRight.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnShuffleRight;
            }
            m_Wrapper.m_MenuActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                @ChangeMenu.started += instance.OnChangeMenu;
                @ChangeMenu.performed += instance.OnChangeMenu;
                @ChangeMenu.canceled += instance.OnChangeMenu;
                @ShuffleLeft.started += instance.OnShuffleLeft;
                @ShuffleLeft.performed += instance.OnShuffleLeft;
                @ShuffleLeft.canceled += instance.OnShuffleLeft;
                @ShuffleRight.started += instance.OnShuffleRight;
                @ShuffleRight.performed += instance.OnShuffleRight;
                @ShuffleRight.canceled += instance.OnShuffleRight;
            }
        }
    }
    public MenuActionsActions @MenuActions => new MenuActionsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IInGameActionsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAiming(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnBasicAttack(InputAction.CallbackContext context);
        void OnShieldParry(InputAction.CallbackContext context);
        void OnAbility1(InputAction.CallbackContext context);
        void OnAbility2(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IMenuActionsActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnChangeMenu(InputAction.CallbackContext context);
        void OnShuffleLeft(InputAction.CallbackContext context);
        void OnShuffleRight(InputAction.CallbackContext context);
    }
}
